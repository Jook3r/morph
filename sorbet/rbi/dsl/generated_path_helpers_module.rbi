# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.

module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def admin_api_queries_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_api_query_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_comment_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_comments_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_dashboard_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_docker_containers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_docker_images_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_owners_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_run_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_runs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_scraper_queue_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_sidekiq_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def batch_action_admin_api_queries_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def batch_action_admin_owners_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def batch_action_admin_runs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def batch_action_admin_scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def connection_logs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def create_one_time_supporters_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def data_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def discourse_sso_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_nodejs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_perl_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_php_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_python_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def documentation_ruby_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_form_scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_new_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def github_scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def history_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def language_version_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def libraries_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_supporter_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def organization_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pricing_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_key_owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_locally_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def run_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def running_scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def scrapers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def scraping_javascript_sites_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def secret_values_documentation_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidekiq_web_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stats_users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def stop_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def supporter_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def supporters_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_refetch_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_read_only_mode_admin_site_settings_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_maximum_concurrent_scrapers_admin_site_settings_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_github_omniauth_authorize_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_github_omniauth_callback_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watch_owner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watch_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watchers_scraper_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def watching_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webhooks_documentation_index_path(*args); end
end
