# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-rails` gem.
# Please instead update this file by running `bin/tapioca gem rspec-rails`.

# Namespace for all core RSpec projects.
#
# source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:1
module RSpec
  class << self
    # Used to ensure examples get reloaded between multiple runs in the same
    # process and ensures user configuration is persisted.
    #
    # Users must invoke this if they want to clear all examples but preserve
    # current configuration when they use the runner multiple times within the
    # same process.
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:70
    def clear_examples; end

    # Returns the global [Configuration](RSpec/Core/Configuration) object. While
    # you _can_ use this method to access the configuration, the more common
    # convention is to use [RSpec.configure](RSpec#configure-class_method).
    #
    # @example
    #   RSpec.configuration.drb_port = 1234
    # @see RSpec.configure
    # @see Core::Configuration
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:85
    def configuration; end

    # Setters for shared global objects
    #
    # @api private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:49
    def configuration=(_arg0); end

    # Yields the global configuration to a block.
    #
    # @example
    #   RSpec.configure do |config|
    #   config.add_formatter 'documentation'
    #   end
    # @see Core::Configuration
    # @yield [Configuration] global configuration
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:97
    def configure; end

    # @private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:194
    def const_missing(name); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def context(*args, &example_group_block); end

    # The example being executed.
    #
    # The primary audience for this method is library authors who need access
    # to the example currently being executed and also want to support all
    # versions of RSpec 2 and 3.
    #
    # @example
    #
    #   RSpec.configure do |c|
    #   # context.example is deprecated, but RSpec.current_example is not
    #   # available until RSpec 3.0.
    #   fetch_current_example = RSpec.respond_to?(:current_example) ?
    #   proc { RSpec.current_example } : proc { |context| context.example }
    #
    #   c.before(:example) do
    #   example = fetch_current_example.call(self)
    #
    #   # ...
    #   end
    #   end
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:122
    def current_example; end

    # Set the current example being executed.
    #
    # @api private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:128
    def current_example=(example); end

    # Get the current RSpec execution scope
    #
    # Returns (in order of lifecycle):
    #   * `:suite` as an initial value, this is outside of the test lifecycle.
    #   * `:before_suite_hook` during `before(:suite)` hooks.
    #   * `:before_context_hook` during `before(:context)` hooks.
    #   * `:before_example_hook` during `before(:example)` hooks and `around(:example)` before `example.run`.
    #   * `:example` within the example run.
    #   * `:after_example_hook` during `after(:example)` hooks and `around(:example)` after `example.run`.
    #   * `:after_context_hook` during `after(:context)` hooks.
    #   * `:after_suite_hook` during `after(:suite)` hooks.
    #   * `:suite` as a final value, again this is outside of the test lifecycle.
    #
    # Reminder, `:context` hooks have `:all` alias and `:example` hooks have `:each` alias.
    #
    # @return [Symbol]
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:154
    def current_scope; end

    # Set the current scope rspec is executing in
    #
    # @api private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:134
    def current_scope=(scope); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def describe(*args, &example_group_block); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def example_group(*args, &example_group_block); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def fdescribe(*args, &example_group_block); end

    # Used to ensure examples get reloaded and user configuration gets reset to
    # defaults between multiple runs in the same process.
    #
    # Users must invoke this if they want to have the configuration reset when
    # they use the runner multiple times within the same process. Users must deal
    # themselves with re-configuration of RSpec before run.
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:58
    def reset; end

    # source://rspec-core-3.11.0/lib/rspec/core/shared_example_group.rb:110
    def shared_context(name, *args, &block); end

    # source://rspec-core-3.11.0/lib/rspec/core/shared_example_group.rb:110
    def shared_examples(name, *args, &block); end

    # source://rspec-core-3.11.0/lib/rspec/core/shared_example_group.rb:110
    def shared_examples_for(name, *args, &block); end

    # Internal container for global non-configuration data.
    #
    # @private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:160
    def world; end

    # Setters for shared global objects
    #
    # @api private
    #
    # source://rspec-core-3.11.0/lib/rspec/core.rb:49
    def world=(_arg0); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core-3.11.0/lib/rspec/core/dsl.rb:42
    def xdescribe(*args, &example_group_block); end
  end
end

# @private
#
# source://rspec-core-3.11.0/lib/rspec/core.rb:187
RSpec::MODULES_TO_AUTOLOAD = T.let(T.unsafe(nil), Hash)

# Namespace for rspec-rails code.
#
# source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:2
module RSpec::Rails; end

# @private
#
# source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:4
module RSpec::Rails::FeatureCheck
  private

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:26
  def has_action_cable_testing?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:38
  def has_action_mailbox?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:18
  def has_action_mailer?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:30
  def has_action_mailer_parameterized?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:22
  def has_action_mailer_preview?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:34
  def has_action_mailer_unified_delivery?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:6
  def has_active_job?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:10
  def has_active_record?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:14
  def has_active_record_migration?; end

  # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:42
  def type_metatag(type); end

  class << self
    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:26
    def has_action_cable_testing?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:38
    def has_action_mailbox?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:18
    def has_action_mailer?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:30
    def has_action_mailer_parameterized?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:22
    def has_action_mailer_preview?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:34
    def has_action_mailer_unified_delivery?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:6
    def has_active_job?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:10
    def has_active_record?; end

    # @return [Boolean]
    #
    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:14
    def has_active_record_migration?; end

    # source://rspec-rails-5.1.2/lib/rspec/rails/feature_check.rb:42
    def type_metatag(type); end
  end
end

# Railtie to hook into Rails.
#
# source://rspec-rails-5.1.2/lib/rspec-rails.rb:9
class RSpec::Rails::Railtie < ::Rails::Railtie
  private

  # source://rspec-rails-5.1.2/lib/rspec-rails.rb:54
  def config_default_preview_path(options); end

  # @return [Boolean]
  #
  # source://rspec-rails-5.1.2/lib/rspec-rails.rb:44
  def config_preview_path?(options); end

  # source://rspec-rails-5.1.2/lib/rspec-rails.rb:37
  def setup_preview_path(app); end

  # @return [Boolean]
  #
  # source://rspec-rails-5.1.2/lib/rspec-rails.rb:60
  def supports_action_mailer_previews?(config); end
end

# @private
#
# source://rspec-core-3.11.0/lib/rspec/core/shared_context.rb:54
RSpec::SharedContext = RSpec::Core::SharedContext
